# See https://blog.gitbutler.com/how-git-core-devs-configure-git/.

[alias]
  # List aliases (https://www.becomebetterprogrammer.com/git-alias/).
  aliases = git config --get-regexp alias
  # A better git branch (https://snyk.io/blog/10-git-aliases-for-faster-and-productive-git-workflow/).
  br = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
  # Delete merged branches (https://stackoverflow.com/questions/35171513/how-to-alias-in-git-delete-merged-branches).
  cleanup = !git branch --merged | grep -vE 'main|master|\\*' | xargs -n 1 git branch -d
  # https://medium.com/@kcmueller/delete-local-git-branches-that-were-deleted-on-remote-repository-b596b71b530c
  cleanup-gone = !git branch -vv | grep ': gone]' |  grep -v '\\*' | tr -s ' ' | cut -d ' ' -f 2 | xargs -r git branch -D
  # Temporarily ignore files (https://coderwall.com/p/gjp15g/git-temporarily-ignoring-files).
  freeze = !git update-index --assume-unchanged
  unfreeze = !git update-index --no-assume-unchanged
  frozen = !git ls-files -v | grep ^[a-z]
  # A better git log.
  # https://www.git-scm.com/docs/git-log#Documentation/git-log.txt---graph
  # https://www.git-scm.com/docs/git-log#Documentation/git-log.txt---abbrev-commit
  # https://www.git-scm.com/docs/git-log#Documentation/git-log.txt---dateltformatgt
  # https://www.git-scm.com/docs/git-log#_pretty_formats
  lg = log --graph --abbrev-commit --date=short --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  # Push the current branch to the remote "origin", and set it to track the upstream branch (https://tekin.co.uk/2020/01/git-alias-to-push-and-set-upstream-trackng-on-a-branch).
  publish = push -u origin HEAD
  # Commit work in progress.
  wip = !git add --all && git commit -m
  # Useful shortcuts
  co = checkout
  cob = checkout -b
  cm = commit -m
  p = pull
  pr = pull --rebase
  s = status

[branch]
  # Better branch listing.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-branchsort
  sort = -committerdate

[color]
  # Colorize output.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-colorui
  ui = auto

[column]
  # Output in columns.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-columnui
  ui = auto

[commit]
  # All commits should be GPG signed.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-commitgpgSign
  gpgSign = true
  # Put the whole diff output at the bottom of the commit message template
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-commitverbose
  verbose = true

[core]
  # Global gitignore.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-coreexcludesFile
  excludesFile = ~/.gitignore_global

[diff]
  # Produce more readable diffs.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-codediffalgorithmcode
  algorithm = histogram
  # Colors moved lines in diffs differently.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-codediffcolorMovedcode
  colorMoved = true
  # Uses a prefix pair that is different from the standard "a/" and "b/" depending on what is being compared
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-codediffmnemonicPrefixcode
  mnemonicprefix = true
  # Detect renames.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-codediffrenamescode
  renames = true

[fetch]
  # Remove remote-tracking references that no longer exist on the remote.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-fetchprune
  prune = true
  # Remove any local tags that no longer exist on the remote
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-fetchpruneTags
  pruneTags = true
  # Attempt to update all available remotes.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-fetchall
  all = true

[help]
  # When typos are detected, show the suggestion and prompt for confirmation to run the command
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-helpautoCorrect
  autocorrect = prompt

[init]
  # The default branch name for new repositories.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-codeinitdefaultBranchcode
  defaultBranch = main

[merge]
  # Insert what the base of it looked like too.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-mergeconflictStyle
  conflictstyle = zdiff3

# Use diff-highlight for diffs. See https://git.kernel.org/pub/scm/git/git.git/tree/contrib/diff-highlight/README or
# https://veronneau.org/a-better-git-diff.html.
[pager]
  log = diff-highlight | less
  show = diff-highlight | less
  diff = diff-highlight | less

[pull]
  # fast-forward only
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-pullrebase
  ff = only
  # Rebase branches on top of the fetched branch, instead of merging.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-pullrebase
  rebase = true

[push]
  # Assume --set-upstream on default push when no upstream tracking exists for the current branch
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushautoSetupRemote
  autoSetupRemote = true
  # Pushes the current branch with the same name on the remote.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushdefault
  default = simple
  # Pushes annotated tags in refs/tags that are missing from the remote.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-pushfollowTags
  followTags = true

[rebase]
  # https://blog.gitbutler.com/git-autosquash/
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rebaseautoSquash
  autoSquash = true
  # Be able to run rebases on a dirty worktree.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-mergeautoStash
  autoStash = true
  # Automatically force-update any branches that point to commits that are being rebased.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rebaseupdateRefs
  updateRefs = true
  # Always show a diffstat of what changed upstream since the last rebase.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rebasestat
  stat = true

[rerere]
  # Activate recording of resolved conflicts.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rerereenabled
  enabled = true
  # Automatically re-apply the resolutions if it sees them again.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-rerereautoUpdate
  autoupdate = true

[status]
  # Show individual files in untracked directories.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-statusshowUntrackedFiles
  showUntrackedFiles = all

[tag]
  # All tags should be GPG signed.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-taggpgSign
  gpgSign = true
  forceSignAnnotated = true
  # Tags are usually versions, so sort them accordingly.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-tagsort
  sort = version:refname


[transfer]
  # Abort when a malformed object or a link to a nonexistent object is detected.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-transferfsckObjects
  fsckObjects = true

[user]
  # What ends up in the author and committer field of commit objects.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-username
  name = Marc Wrobel
  email = marc.wrobel@gmail.com
  # Force git to use this GPG key.
  # https://git-scm.com/docs/git-config#Documentation/git-config.txt-usersigningKey
  signingkey = marc.wrobel@gmail.com
